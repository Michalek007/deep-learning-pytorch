conv1:4;conv2:4;fc:64;kernel:5 lr:0.015421670225292113;batch_size:8;epochs:5
NeuralNetwork(
  (conv1): Conv2d(3, 4, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(4, 4, kernel_size=(6, 6), stride=(1, 1))
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=13924, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=10, bias=True)
  )
)Accuracy: 0.2%

conv1:4;conv2:4;fc:64;kernel:5 lr:0.015421670225292113;batch_size:8;epochs:5
NeuralNetwork(
  (conv1): Conv2d(3, 4, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1))
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5476, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=10, bias=True)
  )
)Accuracy: 0.2%

conv1:4;conv2:4;fc:64;kernel:5 lr:0.015421670225292113;batch_size:8;epochs:1
NeuralNetwork(
  (conv1): Conv2d(3, 4, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1))
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5476, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
  )
)Accuracy: 96.8%

conv1:4;conv2:4;fc:64;kernel:5 lr:0.015421670225292113;batch_size:8;epochs:5
NeuralNetwork(
  (conv1): Conv2d(3, 4, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1))
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear_relu_stack): Sequential(
    (0): Linear(in_features=5476, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
  )
)Accuracy: 95.2%

lr:0.015421670225292113;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:0
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 50.2%; Average train loss: 0.25; Average test loss: 0.00

lr:0.015421670225292113;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:1
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 51.9%; Average train loss: 0.02; Average test loss: 0.00

lr:0.015421670225292113;batch_size:8;epochs:20 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:2
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 50.9%; Average train loss: 0.00; Average test loss: 0.00

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:3
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 50.2%; Average train loss: 0.00; Average test loss: 0.00

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:4
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 61.6%; Average train loss: 76.93527767; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:20 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:5
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 52.5%; Average train loss: 18.15214871; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:6
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 57.6%; Average train loss: 0.57729687; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:7
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 63.3%; Average train loss: 0.58731707; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:8
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 59.8%; Average train loss: 0.52040222; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:9
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 58.5%; Average train loss: 0.37255665; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:10
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 55.8%; Average train loss: 0.32057222; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:11
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.1)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): LeakyReLU(negative_slope=0.1)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.1)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.1)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): LeakyReLU(negative_slope=0.1)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): LeakyReLU(negative_slope=0.1)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): LeakyReLU(negative_slope=0.1)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 53.5%; Average train loss: 0.26024386; Average test loss: 0.00000000

lr:0.001;batch_size:8;epochs:5 (('conv', 32, 3, 2, 3), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 64, 3, 1, 1), ('conv', 16, 1, 1, 0), ('max_pool', 2, 2, 0), ('conv', 128, 3, 1, 1), ('avg_pool', 5, 1, 0), ('linear', 256), ('leaky_relu', 0.1), ('linear', 128));dir_number:12
NeuralNetwork(
  (sequential): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(3, 3))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): PReLU(num_parameters=32)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): PReLU(num_parameters=64)
    (7): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): PReLU(num_parameters=16)
    (10): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (11): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): PReLU(num_parameters=64)
    (14): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): PReLU(num_parameters=16)
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (18): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (19): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): PReLU(num_parameters=64)
    (21): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
    (22): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (23): PReLU(num_parameters=16)
    (24): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (25): Conv2d(16, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (26): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (27): PReLU(num_parameters=128)
    (28): AvgPool2d(kernel_size=5, stride=1, padding=0)
    (29): Flatten(start_dim=1, end_dim=-1)
    (30): Linear(in_features=128, out_features=256, bias=True)
    (31): LeakyReLU(negative_slope=0.1)
    (32): Linear(in_features=256, out_features=128, bias=True)
  )
) Accuracy: 55.9%; Average train loss: 0.40579447; Average test loss: 0.00000000

